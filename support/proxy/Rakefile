# Copyright 2012 United States Government, as represented by the Secretary of Defense, Under
# Secretary of Defense (Personnel & Readiness).
# 
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.

require "rake"
require "rake/clean"
require "tilt"
require "tmpdir"
require "pathname"


COMP_SRC = "vwf.example.com"
DOCUMENTATION = "../../public/web/docs/jsdoc_cmp"

PATTERNS = [ "*.vwf.yaml", "*/*.vwf.yaml" ]

chdir COMP_SRC do
    MODULES = FileList.new( PATTERNS ).sort.map do |file|
        file.sub %r{\.yaml$}, ""
    end
end

CLOBBER.include "#{DOCUMENTATION}"

task :build => [ :documentation ]

desc "Null Tasks"
task :full
task :web

desc "Generate the jsdoc component documentation."

task :documentation do |task|

    Dir.mktmpdir nil, "." do |tmpdir| # not in /tmp since java can't see across /cygdrive/c/... on Cygwin

        # Calculate absolute paths for the output directory and the build tools.

        comp_docs = File.expand_path DOCUMENTATION
        build = File.expand_path "../build"

        # Copy the input directory to a temporary location.

        cp_r COMP_SRC + "/.", tmpdir

        # cd to the copy and build from there.

        chdir tmpdir do

            # Convert to relative paths so that java doesn't need to traverse /cygdrive/c/... on Cygwin.

            cwd = Pathname.new( "." ).expand_path

            comp_docs = Pathname.new( comp_docs ).expand_path.relative_path_from( cwd ).to_s
            build = Pathname.new( build ).expand_path.relative_path_from( cwd ).to_s

            # Convert ## comments to /** */ comments for jsdoc.

            sh "ruby", "-p", "-i.bak", "#{build}/rb-to-jsdoc.rb", * FileList.new( PATTERNS ).sort

            # Run jsdoc on the translated source.

            sh "java", "-jar", "#{build}/jsdoc_toolkit-2.4.0/jsrun.jar", "#{build}/jsdoc_toolkit-2.4.0/app/run.js",
                "-Djsdoc.dir=#{build}/jsdoc_toolkit-2.4.0", "--template=#{build}/jsdoc_toolkit-2.4.0/templates/jsdoc",
                "--ext=yaml", "--allfunctions", "--quiet", "--directory=#{comp_docs}",
                * FileList.new( PATTERNS ).sort

        end

    end

end
